data = readtable('Stock_data.csv.xlsx');
[minP,maxP] = bounds(data.Close);
normPrice = (data.Close - minP)/(maxP - minP);
inputs = normPrice(1:end-1)';
targets = normPrice(2:end)';
net = fitnet(10);
net.trainParam.epochs = 200;
net.divideParam.trainRatio = 0.7;
net.divideParam.valRatio = 0.15;
net.divideParam.testRatio = 0.15;
net = train(net,inputs,targets);
outputs = net(inputs);
predicted = outputs * (maxP - minP) + minP;
actual = targets * (maxP - minP) + minP;
plot(predicted,'r-','LineWidth',1);hold on;
plot(actual,'b--','LineWidth',1);
title('Neural Netowrk');xlabel('Day');ylabel('Price');
legend('Predicted','Actual');grid on;
mse = mean((outputs - targets).^2);
rmse = sqrt(mse);
mae = mean(abs(predicted - actual));
r2 = 1 - sum((actual - predicted).^2) / sum((actual - mean(actual)).^2);
fprintf('MSE: %.4f RMSE: %.4f MAE: %.4f R^2: %.4f',mse,rmse,mae,r2);
